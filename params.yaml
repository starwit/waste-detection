data:
  dataset_name: waste-detection
  experiment_name: waste-detection
  # Custom classes configuration
  # If custom_classes is defined, it will be used instead of COCO classes
  # If not defined or empty, the system will fall back to selected COCO classes
  custom_classes:
    # Example custom classes (uncomment and modify as needed):
  - waste
  - cigarette
  use_coco_classes: false
prepare:
  val_split: 0.1
  test_split: 0.1
  augment_multiplier: 1
  # Folder subset configuration - use only a percentage of images from specific folders
  folder_subsets:
    # Example: use only 50% of images from uavvaste folder
    uavvaste: 0.5
    # Example: use only 30% of images from taco folder
    taco: 0.2
    # Example: oversample a folder - use 200% means each image appears twice
    cw32-08-07-train: 2.0
    cw33-auto-mined: 2.0
    # Add more folders as needed. Folders not listed here will use 100% of their images
train:
  model_size: m
  image_size: 1280
  epochs: 50
  batch_size: 8
  # Fine-tuning configuration
  finetune_mode: false  # Set to true to enable fine-tuning
  pretrained_model_path: models/current_best/best.pt    # Path to pre-trained model
  finetune_lr: 0.0001   # Lower learning rate for fine-tuning (default YOLO lr is ~0.01)
  finetune_epochs: 60  # Typically fewer epochs needed for fine-tuning
  freeze_backbone: false # Whether to freeze backbone layers during fine-tuning
evaluation:
  # Baseline model for evaluation comparisons (optional)
  # - If file exists and has content: compares your trained model against it
  # - If missing/empty: automatically uses YOLOv8 COCO checkpoint as baseline
  # - See BASELINE_MANAGEMENT.md for details on baseline selection priority
  baseline_weights_path: models/current_best/best.pt
